name: Continuous Integration

on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'contrib/**'
      - '**/*.md'

jobs:
  build:
    name: ${{ matrix.name }}

    env:
      MAKEJOBS: "-j3"
      CHECK_DOC: "0"
      CCACHE_SIZE: "100M"
      CCACHE_TEMPDIR: /tmp/.ccache-temp
      CCACHE_COMPRESS: "1"
      PYTHON_DEBUG: "1"
      CACHE_NONCE: "1"
      WINEDEBUG: fixme-all
      SDK_URL: https://depends.dogecoincore.org
      BIONIC_LIEF_WHL: lief-0.12.3-cp36-cp36m-linux_x86_64.whl

    strategy:
      fail-fast: false
      matrix:
        name:
          - aarch64-linux
          - aarch64-linux-experimental
        include:
          - name: aarch64-linux-experimental
            host: aarch64-linux-gnu
            os: ubuntu-22.04
            packages: g++-aarch64-linux-gnu qemu-user-static qemu-user
            run-bench: false
            test-script: |
              qemu-aarch64 -E LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib/ /usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1 src/test/test_pepecoin
            check-security: true
            check-symbols: false
            dep-opts: "NO_QT=1"
            config-opts: "--enable-experimental --with-armv8-crypto --with-armv82-crypto --enable-zmq --enable-glibc-back-compat LDFLAGS=-static-libstdc++"
            goal: install
          - name: aarch64-linux
            host: aarch64-linux-gnu
            os: ubuntu-22.04
            packages: g++-aarch64-linux-gnu qemu-user-static qemu-user
            run-bench: false
            test-script: |
              qemu-aarch64 -E LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib/ /usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1 src/test/test_pepecoin
            check-security: true
            check-symbols: true
            dep-opts: "NO_QT=1"
            config-opts: "--enable-zmq --enable-glibc-back-compat LDFLAGS=-static-libstdc++"
            goal: install

    runs-on: ${{ matrix.os }}

    steps:
      - name: Pre install
        if: ${{ matrix.preinstall }}
        run: ${{ matrix.preinstall }}

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libtool autotools-dev automake \
               pkg-config bsdmainutils curl ca-certificates ccache rsync git \
               procps bison python3 python3-pip python3-setuptools python3-wheel
          sudo apt-get install ${{ matrix.packages }}
          python3 -m pip install setuptools==70.3.0 --upgrade

      - name: Install custom lief wheel
        if: matrix.os == 'ubuntu-18.04'
        run: python3 -m pip install $SDK_URL/$BIONIC_LIEF_WHL

      - name: Install standard lief wheel
        if: matrix.os != 'ubuntu-18.04'
        run: python3 -m pip install lief

      - name: Post install
        if: ${{ matrix.postinstall }}
        run: ${{ matrix.postinstall }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: SDK cache
        if: ${{ matrix.sdk }}
        uses: actions/cache@v4
        env:
          cache-name: sdk
        with:
          path: ./depends/sdk-sources
          key: ${{ matrix.name }}-${{ env.cache-name }}-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Install SDK
        if: ${{ matrix.sdk }}
        env:
          sdk-filename: MacOSX${{ matrix.sdk }}.sdk.tar.gz
        run: |
          mkdir -p ./depends/sdk-sources
          mkdir -p ./depends/SDKs
          echo "${{ matrix.sdk-shasum }}  depends/sdk-sources/${{ env.sdk-filename }}" | sha256sum -c || \
          curl --location --fail $SDK_URL/${{ env.sdk-filename }} -o depends/sdk-sources/${{ env.sdk-filename }} &&\
          echo "${{ matrix.sdk-shasum }}  depends/sdk-sources/${{ env.sdk-filename }}" | sha256sum -c
          tar -C depends/SDKs -xf depends/sdk-sources/${{ env.sdk-filename }}

      - name: Dependency cache
        uses: actions/cache@v4
        env:
          cache-name: depends
        with:
          path: ./depends/built
          key: ${{ matrix.name }}-${{ env.cache-name }}-${{ hashFiles('depends/packages/*', '.github/workflows/ci.yml') }}

      - name: Build depends
        run: |
          make $MAKEJOBS -C depends HOST=${{ matrix.host }} ${{ matrix.dep-opts }}

      - name: CCache
        uses: actions/cache@v4
        env:
          cache-name: ccache
        with:
          path: ~/.ccache
          key: ${{ matrix.name }}-${{ env.cache-name }}-${{ hashFiles('**/configure.ac', '.github/workflows/ci.yml') }}

      - name: Build Pepecoin
        run: |
          depends/${{ matrix.host }}/native/bin/ccache --max-size=$CCACHE_SIZE
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/${{ matrix.host }} ${{ matrix.config-opts }} --enable-reduce-exports || ( cat config.log && false)
          make $MAKEJOBS ${{ matrix.goal }} || ( echo "Build failure. Verbose build follows." && make ${{ matrix.goal }} V=1 ; false )

      - name: Run benchmark
        if: ${{ matrix.run-bench }}
        run: |
          src/bench/bench_pepecoin > ${{ matrix.name }}-bench.csv
          cat ${{ matrix.name }}-bench.csv

      - name: Run tests
        if: ${{ matrix.test-script }}
        run: ${{ matrix.test-script }}

      - name: Check security
        if: ${{ matrix.check-security }}
        run: make -C src check-security

      - name: Check symbols
        if: ${{ matrix.check-symbols }}
        run: make -C src check-symbols

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pepecoin-${{ github.sha }}-${{ matrix.name }}
          path: |
            depends/${{ matrix.host }}/bin/pepecoin*
            dist/Pepecoin-Qt.app
            ${{ matrix.name }}-bench.csv